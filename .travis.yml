os: linux
language: python
services:
  - docker

env:
  global:
    - REPO=jaramquest/api-core

before_script:
  - mkdir -p ~/.docker
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - echo '{"experimental":"enabled"}' >! ~/.docker/config.json
  - sudo service docker restart
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - VERSION="1.0" ; BRANCH="latest"
  - ARCH=${TRAVIS_CPU_ARCH}
  - if [ "${TRAVIS_BRANCH}" != "master" ]; then VERSION+="${TRAVIS_BRANCH}" ; BRANCH="${TRAVIS_BRANCH}" ; fi

# master branch 로 push 할 때는 모든 아키텍처로
# dev branch 로 push 할 때는 amd64에서만 테스트하도록 한다.

install:
  - |
    if [ "${TRAVIS_BUILD_STAGE_NAME}" == "!Build" ]; then
      pip install -r ./requirements.txt;
      pip install -r .devcontainer/requirements.test.txt;
    fi

scripts:
  #- pytest --cov=./jquest
  - docker build --build-arg ARCH=${ARCH} -t $REPO:${ARCH}-${VERSION} .
  - if [ "${BRANCH}" != "dev" ]; then docker push $REPO:${ARCH}-${VERSION} ; fi
  - docker tag $REPO:${ARCH}-${VERSION} $REPO:${ARCH}-${BRANCH}
  - docker push $REPO:${ARCH}-${BRANCH}

jobs:
  fast_finish: true
  include:
    - name: "Python 3.8 on linux/amd64"
      arch: "amd64"
      python: 3.8
    - name: "Python 3.8 on linux/arm64"
      arch: "arm64"
      python: 3.8
      before_install:
        - sudo chown -R $USER:$GROUP ~/.cache/pip/wheels

    - stage: "Deploy"
      name: "Manifest"
      script:
        - echo '{"experimental":"enabled"}' >! ~/.docker/config.json
        - |
          push() {
            docker pull $REPO:amd64-${1} & docker pull $REPO:arm64-${1}
            docker manifest create $REPO:${1} $REPO:amd64-${1} $REPO:arm64-${1}
            docker manifest annotate $REPO:${1} $REPO:amd64-${1} --os linux --arch amd64
            docker manifest annotate $REPO:${1} $REPO:arm64-${1} --os linux --arch arm64 --variant v8
            docker manifest push --purge $REPO:${1}
          }
        - if [ "${BRANCH}" != "dev" ]; then push ${VERSION} ; fi
        - push ${BRANCH}
